
#21201701

#Task 1
class KeyIndex:
  def __init__(self,a):
    self.a = a
    self.mini = min(self.a)
    self.max = max(self.a)
    self.abs = abs(self.mini)
    size = self.abs + self.max + 1
    self.k = [0]*size

    for i in self.a:
      idx = i + self.abs
      self.k[idx] = self.k[idx] + 1
    print(self.k)


  def search(self,ele):
    elem = ele + self.abs
    if self.k[elem] != 0:
      return True
    else:
      return False

  def sort(self):
    srt = [0]*len(self.a)
    j = 0
    for i in range(len(self.k)):
      if self.k[i] != 0:
        for index in range(self.k[i]):
          srt[j]=i-self.abs
          j+=1

    return srt


arr=[9,7,8,5,7,3]
obj1=KeyIndex(arr)
arr2=[2,3,-4,7,-4]
obj2=KeyIndex(arr2)
print(obj2.search(-3))
print(obj1.sort())




#Task 2

def HashTable(ls):
    v = ['A','E','I','O','U']

    table = [0]*9

    for string in ls:
        cons = 0
        tot = 0
        for i in string:
            if i not in v and 65<=ord(i)<=90:
                cons +=1
            else:
                if 48<=ord(i)<=57:
                    tot += int(i)

        new_index = ((cons*24)+tot)%9

        if table[new_index] == 0:
            table[new_index] = string
        else:
            index = new_index
            while table[index] != 0:
                index = (index+1)%len(table)
                if index == new_index:
                    print("Sorry! The Table is full, could not insert", string)
                    break
            else:
                table[index] = string

    print(table)
arr = ["ST1E89B8A32","ST1E89B8A32"]
HashTable(arr)




